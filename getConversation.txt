const { conversationModel } = require("../models/ConversationModel")


const getConversation = async(currentUserId)=>{
    if(currentUserId){
        const currentUserConversation = await conversationModel.find({
            "$or" : [
                { sender : currentUserId },
                { receiver : currentUserId}
            ]
        }).sort({  updatedAt : -1 }).populate('message').populate('sender').populate('receiver')

        const conversation = currentUserConversation.map((converse)=>{
            const countUnseenMsg = converse?.message?.reduce((prev,curr) => {
                const msgByUserId = curr?.msgByUserId?.toString()

                if(msgByUserId !== currentUserId){
                    return  prev + (curr?.seen ? 0 : 1)
                }else{
                    return prev
                }
             
            },0)
            
            return{
                _id : converse?._id,
                sender : converse?.sender,
                receiver : converse?.receiver,
                unseenMsg : countUnseenMsg,
                lastMsg : converse.message[converse?.message?.length - 1]
            }
        })

        return conversation
    }else{
        return []
    }
}

module.exports = getConversation